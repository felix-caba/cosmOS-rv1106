#!/bin/sh
bootmedium=sd_card
linkdev(){
if [ ! -d "/dev/block/by-name" ];then
mkdir -p /dev/block/by-name
cd /dev/block/by-name
ln -sf /dev/mmcblk1p1 env
ln -sf /dev/mmcblk1p2 idblock
ln -sf /dev/mmcblk1p3 uboot
ln -sf /dev/mmcblk1p4 boot
ln -sf /dev/mmcblk1p5 oem
ln -sf /dev/mmcblk1p6 userdata
ln -sf /dev/mmcblk1p7 rootfs
for i in $(seq 5 8); do
	det_partition="/dev/mmcblk1p$i"
	mount_point=$(mount | grep "$det_partition" | awk '{print $3}')
	if [ -n "$mount_point" ]; then
	echo "Unmounting : $det_partition ($mount_point)"
	umount "$det_partition"
	else
	echo "Partition is not mounted: $det_partition"
	fi
done
fi }
mount_part(){
if [ -z "$1" -o -z "$2" -o -z "$3" ];then
	echo "Invalid paramter, exit !!!"
	exit 1
fi
root_dev=$(mountpoint -n /)
root_dev=${root_dev%% *}
partname=$1
part_dev=/dev/block/by-name/$1
mountpt=$2
part_fstype=$3
part_realdev=$(realpath $part_dev)

if [ ! -d $mountpt ]; then
	if [ "$mountpt" = "IGNORE" -a "emmc" = "$bootmedium" ];then
		if [ "$root_dev" = "$part_realdev" ];then
			resize2fs $part_dev
		fi
		return 0;
	elif [ "$mountpt" = "IGNORE" -a "sd_card" = "$bootmedium" ];then
		if [ "$root_dev" = "$part_realdev" ];then
			resize2fs $part_dev
		fi
		return 0;
	else
		echo "${0} info: mount point path [$mountpt] not found, skip..."
		return 1;
	fi
fi

if test -h $part_dev; then
case $bootmedium in
	emmc|sd_card)
		if [ "$root_dev" = "$part_realdev" ];then
			resize2fs $part_dev
		else
			e2fsck -y $part_dev
			mount -t $part_fstype $part_dev $mountpt
			if [ $? -eq 0 ]; then
				resize2fs $part_dev
				tune2fs $part_dev -L $partname
			else
				echo "mount $partname error, try to format..."
				mke2fs -F -L $partname $part_dev  && 					tune2fs -c 0 -i 0 $part_dev && 					mount -t $part_fstype $part_dev $mountpt
			fi
		fi
		;;
	*)
		echo "Invalid Parameter: Check bootmedium !!!"
		exit 1
		;;
esac
fi
}
case $1 in start) linkdev;
mount_part rootfs IGNORE ext4 ;
mount_part userdata /userdata ext4 ;
mount_part oem /oem ext4 ;
;; linkdev) linkdev ;
;; stop) printf stop $0 finished\n ;; *) echo Usage: $0 {start|stop} exit 1 ;; esac
